{"version":3,"sources":["../../../../src/components/buttons/animated-toggle-button/index.tsx"],"sourcesContent":["\"use client\";\n\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { useState } from \"react\";\n\ninterface ToggleAnimateProps {\n  initial: any;\n  animate: any;\n  exit: any;\n}\n\nexport interface AnimatedToggleButtonComponentRenderProps {\n  on: React.ReactNode;\n  off: React.ReactNode;\n  loading: React.ReactNode;\n  error?: React.ReactNode;\n}\n\nconst _DefaultToggleAnimateProps: ToggleAnimateProps = {\n  initial: { opacity: 0, scale: 0.0 },\n  animate: { opacity: 1, scale: 1 },\n  exit: { opacity: 0, scale: 0.0 },\n};\n\nexport default function AnimatedToggleButtonComponent({\n  isOn,\n  render,\n  onToggle,\n}: {\n  isOn: boolean;\n  render: AnimatedToggleButtonComponentRenderProps;\n  onToggle: () => Promise<{\n    toggleSuccess: boolean;\n  }>;\n}) {\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [showErrorRender, setShowErrorRender] = useState<boolean>(false);\n\n  return (\n    <AnimatePresence>\n      {isOn ? (\n        <motion.div\n          {..._DefaultToggleAnimateProps}\n          key=\"button\"\n          onClick={(e: any) => {\n            e.stopPropagation();\n            if (isUpdating) return;\n            setIsUpdating(true);\n            onToggle().then(({ toggleSuccess }) => {\n              setIsUpdating(false);\n              setShowErrorRender(!toggleSuccess);\n            });\n          }}\n        >\n          {isUpdating ? (\n            <motion.div {..._DefaultToggleAnimateProps} key=\"button-on-spin\">\n              {render.loading}\n            </motion.div>\n          ) : (\n            <motion.div {..._DefaultToggleAnimateProps} key=\"button-on-on\">\n              {showErrorRender ? render.error ?? render.on : render.on}\n            </motion.div>\n          )}\n        </motion.div>\n      ) : (\n        <motion.div\n          {..._DefaultToggleAnimateProps}\n          className=\"\"\n          key=\"button\"\n          onClick={(e: any) => {\n            e.stopPropagation();\n            if (isUpdating) return;\n            setIsUpdating(true);\n            onToggle().then(({ toggleSuccess }) => {\n              setIsUpdating(false);\n              setShowErrorRender(!toggleSuccess);\n            });\n          }}\n        >\n          {isUpdating ? (\n            <motion.div {..._DefaultToggleAnimateProps} key=\"button-off-spin\">\n              {render.loading}\n            </motion.div>\n          ) : (\n            <motion.div {..._DefaultToggleAnimateProps} key=\"button-off-off\">\n              {showErrorRender ? render.error ?? render.off : render.off}\n            </motion.div>\n          )}\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,2BAAwC;AACxC,mBAAyB;AAezB,IAAM,6BAAiD;AAAA,EACrD,SAAS,EAAE,SAAS,GAAG,OAAO,EAAI;AAAA,EAClC,SAAS,EAAE,SAAS,GAAG,OAAO,EAAE;AAAA,EAChC,MAAM,EAAE,SAAS,GAAG,OAAO,EAAI;AACjC;AAEe,SAAR,8BAA+C;AAAA,EACpD;AAAA,EACA;AAAA,EACA;AACF,GAMG;AAlCH;AAmCE,QAAM,CAAC,YAAY,aAAa,QAAI,uBAAS,KAAK;AAClD,QAAM,CAAC,iBAAiB,kBAAkB,QAAI,uBAAkB,KAAK;AAErE,SACE,oCAAC,4CACE,OACC;AAAA,IAAC,4BAAO;AAAA,IAAP;AAAA,MACE,GAAG;AAAA,MACJ,KAAI;AAAA,MACJ,SAAS,CAAC,MAAW;AACnB,UAAE,gBAAgB;AAClB,YAAI,WAAY;AAChB,sBAAc,IAAI;AAClB,iBAAS,EAAE,KAAK,CAAC,EAAE,cAAc,MAAM;AACrC,wBAAc,KAAK;AACnB,6BAAmB,CAAC,aAAa;AAAA,QACnC,CAAC;AAAA,MACH;AAAA;AAAA,IAEC,aACC,oCAAC,4BAAO,KAAP,EAAY,GAAG,4BAA4B,KAAI,oBAC7C,OAAO,OACV,IAEA,oCAAC,4BAAO,KAAP,EAAY,GAAG,4BAA4B,KAAI,kBAC7C,mBAAkB,YAAO,UAAP,YAAgB,OAAO,KAAK,OAAO,EACxD;AAAA,EAEJ,IAEA;AAAA,IAAC,4BAAO;AAAA,IAAP;AAAA,MACE,GAAG;AAAA,MACJ,WAAU;AAAA,MACV,KAAI;AAAA,MACJ,SAAS,CAAC,MAAW;AACnB,UAAE,gBAAgB;AAClB,YAAI,WAAY;AAChB,sBAAc,IAAI;AAClB,iBAAS,EAAE,KAAK,CAAC,EAAE,cAAc,MAAM;AACrC,wBAAc,KAAK;AACnB,6BAAmB,CAAC,aAAa;AAAA,QACnC,CAAC;AAAA,MACH;AAAA;AAAA,IAEC,aACC,oCAAC,4BAAO,KAAP,EAAY,GAAG,4BAA4B,KAAI,qBAC7C,OAAO,OACV,IAEA,oCAAC,4BAAO,KAAP,EAAY,GAAG,4BAA4B,KAAI,oBAC7C,mBAAkB,YAAO,UAAP,YAAgB,OAAO,MAAM,OAAO,GACzD;AAAA,EAEJ,CAEJ;AAEJ;","names":[]}