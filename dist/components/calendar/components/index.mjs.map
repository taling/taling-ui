{"version":3,"sources":["../../../../src/util/tailwind-util/class-names/index.ts","../../../../src/components/calendar/components/day.tsx","../../../../src/components/calendar/constants/index.ts","../../../../src/components/calendar/content.tsx","../../../../src/components/calendar/components/event.tsx","../../../../src/components/calendar/components/index.tsx"],"sourcesContent":["export function classNames(...classes: (string | undefined)[]) {\n  return classes.filter(Boolean).join(\" \");\n}\n","import { classNames } from \"@taling-ui/util/tailwind-util/class-names\";\nimport { useContext } from \"react\";\nimport { colorPresets } from \"../constants\";\nimport { MainColorContext } from \"../content\";\nimport {\n  CalendarDayType,\n  CalendarEventType,\n  CalendarRenderersType,\n} from \"../types\";\nimport CalendarEventComponent from \"./event\";\n\nconst CalendarDayComponent = ({\n  day,\n  renderers,\n  onEventClick,\n  onHover,\n}: {\n  day: CalendarDayType;\n  renderers?: CalendarRenderersType;\n  onEventClick?: (event: CalendarEventType) => void;\n  onHover?: ({\n    status,\n    event,\n  }: {\n    status: boolean;\n    event: CalendarEventType;\n  }) => void;\n}) => {\n  const mainColor = useContext(MainColorContext);\n\n  const color = colorPresets[mainColor];\n\n  return (\n    <div\n      className={classNames(\n        day.isCurrentMonth ? \"bg-white\" : \"bg-gray-50 text-gray-500\",\n        \"relative px-3 py-2 min-h-[88px]\",\n      )}\n    >\n      <time\n        dateTime={day.dateString}\n        className={\n          day.isToday\n            ? `flex h-6 w-6 items-center justify-center rounded-full ${color.bg} font-semibold text-white`\n            : undefined\n        }\n      >\n        {day.day}\n      </time>\n      {day.events?.length > 0 && (\n        <ol className=\"mt-2\">\n          {day.events?.map((event, index) => {\n            return (\n              <li\n                key={index}\n                onClick={() => {\n                  onEventClick && onEventClick(event);\n                }}\n                onMouseEnter={() => {\n                  onHover && onHover({ status: true, event });\n                }}\n                onMouseLeave={() => {\n                  onHover && onHover({ status: false, event });\n                }}\n              >\n                <CalendarEventComponent event={event} renderers={renderers} />\n              </li>\n            );\n          })}\n        </ol>\n      )}\n    </div>\n  );\n};\n\nexport default CalendarDayComponent;\n","import { SelectableColorType } from \"../types\";\n\ntype ColorPresetsType<T> = {\n  [key in SelectableColorType]: T;\n};\n\nexport const colorPresets: ColorPresetsType<any> = {\n  pink: {\n    bg: \"bg-taling-pink\",\n    hoverBg: \"hover:bg-taling-pink-600\",\n    focusVisible: \"focus-visible:outline-taling-pink-600\",\n  },\n  purple: {\n    bg: \"bg-taling-purple-500\",\n    hoverBg: \"hover:bg-taling-purple-600\",\n    focusVisible: \"focus-visible:outline-taling-purple-700\",\n  },\n};\n","import { createContext } from \"react\";\nimport { SelectableColorType } from \"./types\";\n\nexport const MainColorContext = createContext<SelectableColorType>(\"pink\");\n","import { CalendarEventType, CalendarRenderersType } from \"../types\";\n\nconst CalendarEventComponent = ({\n  event,\n  renderers,\n}: {\n  event: CalendarEventType;\n  renderers?: CalendarRenderersType;\n}) => {\n  const eventRenderer = renderers?.monthView?.event;\n  if (eventRenderer) {\n    return eventRenderer(event);\n  }\n\n  return (\n    <div className=\"bg-white shadow-md rounded-md overflow-hidden my-1\">\n      <a className=\"group flex gap-2 cursor-pointer\">\n        <div className=\"bg-taling-purple-500 w-[0.25rem] shrink-0\"></div>\n        <p className=\"flex-auto truncate font-medium text-gray-900 group-hover:text-taling-purple-600\">\n          {event.title}\n        </p>\n      </a>\n    </div>\n  );\n};\n\nexport default CalendarEventComponent;\n","import {\n  CalendarDayType,\n  CalendarEventType,\n  CalendarRenderersType,\n} from \"../types\";\nimport CalendarDayComponent from \"./day\";\n\nconst CalendarInterface = ({\n  days,\n  renderers,\n  onEventClick,\n  onDayClick,\n  onHover,\n}: {\n  days: CalendarDayType[];\n  renderers?: CalendarRenderersType;\n  onEventClick?: (event: CalendarEventType) => void;\n  onDayClick?: (day: CalendarDayType) => void;\n  onHover?: ({\n    status,\n    event,\n  }: {\n    status: boolean;\n    event: CalendarEventType;\n  }) => void;\n}) => {\n  const renderDay = (day: CalendarDayType, index: number) => {\n    // use provided renderer if available\n    if (renderers?.monthView?.day)\n      return (\n        <div key={index} onClick={onDayClick && (() => onDayClick(day))}>\n          {renderers?.monthView.day(day)}\n        </div>\n      );\n    // use default renderer\n    else\n      return (\n        <div key={index} onClick={onDayClick && (() => onDayClick(day))}>\n          <CalendarDayComponent\n            key={index}\n            day={day}\n            renderers={renderers}\n            onEventClick={onEventClick}\n            onHover={onHover}\n          />\n        </div>\n      );\n  };\n  return (\n    <>\n      <div className=\"flex flex-auto flex-col shadow ring-1 ring-black ring-opacity-5\">\n        <div className=\"grid grid-cols-7 gap-px border-b border-gray-300 bg-gray-200 text-center text-xs font-semibold leading-6 text-gray-700 lg:flex-none\">\n          <div className=\"bg-white py-2\">일</div>\n          <div className=\"bg-white py-2\">월</div>\n          <div className=\"bg-white py-2\">화</div>\n          <div className=\"bg-white py-2\">수</div>\n          <div className=\"bg-white py-2\">목</div>\n          <div className=\"bg-white py-2\">금</div>\n          <div className=\"bg-white py-2\">토</div>\n        </div>\n        <div className=\"flex bg-gray-200 text-xs leading-6 text-gray-700\">\n          <div className=\"grid w-full grid-cols-7 gap-px\">\n            {days?.map(renderDay)}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CalendarInterface;\n"],"mappings":"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","names":[]}