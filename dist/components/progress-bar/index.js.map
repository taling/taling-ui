{"version":3,"sources":["../../../src/components/progress-bar/index.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\n\nexport function DefaultProgressBarComponent({ percent }: { percent: number }) {\n  const [_internalPercent, setInternalPercent] = useState(0);\n\n  useEffect(() => {\n    if (percent > 100) setInternalPercent(100);\n    else if (percent < 0) setInternalPercent(0);\n    else setInternalPercent(percent);\n  }, [percent]);\n\n  return (\n    <div className=\"relative h-1 w-full overflow-hidden rounded-full\">\n      <div className=\"absolute bottom-0 left-0 right-0 top-0 h-2 bg-gray-200\"></div>\n      <div\n        className=\"absolute bottom-0 left-0 right-0 top-0 h-2 bg-taling-purple-400\"\n        style={{ width: `${_internalPercent}%` }}\n      ></div>\n    </div>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,mBAAoC;AAE7B,SAAS,4BAA4B,EAAE,QAAQ,GAAwB;AAC5E,QAAM,CAAC,kBAAkB,kBAAkB,QAAI,uBAAS,CAAC;AAEzD,8BAAU,MAAM;AACd,QAAI,UAAU,IAAK,oBAAmB,GAAG;AAAA,aAChC,UAAU,EAAG,oBAAmB,CAAC;AAAA,QACrC,oBAAmB,OAAO;AAAA,EACjC,GAAG,CAAC,OAAO,CAAC;AAEZ,SACE,oCAAC,SAAI,WAAU,sDACb,oCAAC,SAAI,WAAU,0DAAyD,GACxE;AAAA,IAAC;AAAA;AAAA,MACC,WAAU;AAAA,MACV,OAAO,EAAE,OAAO,GAAG,gBAAgB,IAAI;AAAA;AAAA,EACxC,CACH;AAEJ;","names":[]}