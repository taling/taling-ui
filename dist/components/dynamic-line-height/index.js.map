{"version":3,"sources":["../../../src/components/dynamic-line-height/index.tsx"],"sourcesContent":["import { useLayoutEffect, useRef, useState } from \"react\";\n\ninterface DynamicLineHeightTextProps {\n  text: string;\n  singleLineHeight?: number;\n  multiLineHeight?: number;\n  className?: string;\n}\n\nconst DynamicLineHeightText = ({\n  text,\n  singleLineHeight = 16,\n  multiLineHeight = 20,\n  className = \"\",\n  ...props\n}: DynamicLineHeightTextProps) => {\n  const textRef = useRef<HTMLParagraphElement>(null);\n  const [isSingleLine, setIsSingleLine] = useState(true);\n\n  useLayoutEffect(() => {\n    if (textRef.current) {\n      setIsSingleLine(textRef.current.scrollHeight <= singleLineHeight * 2);\n    }\n  }, [text, singleLineHeight]);\n\n  return (\n    <p\n      ref={textRef}\n      className={`transition-all duration-200 ${\n        isSingleLine\n          ? `leading-[${singleLineHeight}px]`\n          : `leading-[${multiLineHeight}px]`\n      } ${className}`}\n      {...props}\n    >\n      {text}\n    </p>\n  );\n};\n\nexport default DynamicLineHeightText;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkD;AASlD,IAAM,wBAAwB,CAAC;AAAA,EAC7B;AAAA,EACA,mBAAmB;AAAA,EACnB,kBAAkB;AAAA,EAClB,YAAY;AAAA,EACZ,GAAG;AACL,MAAkC;AAChC,QAAM,cAAU,qBAA6B,IAAI;AACjD,QAAM,CAAC,cAAc,eAAe,QAAI,uBAAS,IAAI;AAErD,oCAAgB,MAAM;AACpB,QAAI,QAAQ,SAAS;AACnB,sBAAgB,QAAQ,QAAQ,gBAAgB,mBAAmB,CAAC;AAAA,IACtE;AAAA,EACF,GAAG,CAAC,MAAM,gBAAgB,CAAC;AAE3B,SACE;AAAA,IAAC;AAAA;AAAA,MACC,KAAK;AAAA,MACL,WAAW,+BACT,eACI,YAAY,gBAAgB,QAC5B,YAAY,eAAe,KACjC,IAAI,SAAS;AAAA,MACZ,GAAG;AAAA;AAAA,IAEH;AAAA,EACH;AAEJ;AAEA,IAAO,8BAAQ;","names":[]}