{"version":3,"sources":["../../../src/components/select-box/index.tsx","../../../src/util/tailwind-util/class-names/index.ts"],"sourcesContent":["import { Listbox, Transition } from \"@headlessui/react\";\nimport { CheckIcon, ChevronUpDownIcon } from \"@heroicons/react/20/solid\";\nimport { classNames } from \"@taling-ui/util/tailwind-util/class-names\";\nimport { Fragment, useCallback, useEffect, useState } from \"react\";\n\nexport interface ISelectBoxItem {\n  id: number;\n  name: string;\n  display?: boolean;\n}\n\nexport default function SelectBox({\n  list,\n  enabled,\n  onSelected,\n  defaultSelection,\n  isToday,\n  placeholder = \"선택해 주세요\",\n  width = \"w-full\",\n  optionHight = \"max-h-60\",\n  optionWidth = \"w-full\",\n  optionAlign,\n}: {\n  list: ISelectBoxItem[];\n  enabled: boolean;\n  onSelected: (item: ISelectBoxItem | null) => void;\n  defaultSelection: ISelectBoxItem | null;\n  isToday?: boolean;\n  placeholder?: string;\n  width?: string;\n  optionHight?: string;\n  optionWidth?: string;\n  optionAlign?: string;\n}) {\n  const [_internaList, setInternalList] = useState<ISelectBoxItem[]>();\n  const [selected, setSelected] = useState<ISelectBoxItem | null>(null);\n  const [_hydrated, setHydrated] = useState<boolean>(false); // glitch 제거\n\n  /**\n   * 리스트가 업데이트 되고, 이미 선택된 값이 리스트에 없으면 선택을 초기화 합니다.\n   */\n  const onListChanged = useCallback(\n    (newList: ISelectBoxItem[]) => {\n      // 먼저 선택상황을 편집하고,\n      const found = newList.find(\n        (item) =>\n          item?.id === selected?.id || item?.id === defaultSelection?.id,\n      );\n\n      if (!found) {\n        setSelected(null);\n        return;\n      }\n\n      if (!selected) {\n        setSelected(defaultSelection);\n      }\n\n      // 리스트를 초기화\n      if (newList === _internaList) return;\n      setInternalList(newList);\n    },\n    [_internaList, defaultSelection, selected],\n  );\n\n  useEffect(() => {\n    setHydrated(true);\n    onListChanged(list);\n    return () => {\n      setHydrated(false);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [defaultSelection, list]);\n\n  useEffect(() => {\n    setSelected(defaultSelection);\n  }, [defaultSelection]);\n\n  if (list.length === 0 && defaultSelection === null) return <></>;\n  if (!_hydrated) return <></>;\n\n  return (\n    <Listbox\n      value={selected}\n      onChange={(value) => {\n        setSelected(value);\n        onSelected(value);\n      }}\n    >\n      {({ open }) => (\n        <>\n          <div className={classNames(\"relative\", width)}>\n            <Listbox.Button\n              className={classNames(\n                width,\n                \"relative cursor-pointer rounded-md bg-white py-1.5 pl-3 pr-10 text-left text-taling-gray-900 shadow-sm ring-1 ring-inset ring-taling-gray-300  sm:text-sm sm:leading-6\",\n                enabled\n                  ? \"focus:outline-none focus:ring-2 focus:ring-taling-pink \"\n                  : \"!cursor-not-allowed !bg-taling-gray-300 !text-taling-gray-800 opacity-50 \",\n              )}\n            >\n              <span\n                className={classNames(\n                  \"block truncate\",\n                  selected ? \"\" : \"text-low-emphasis\",\n                )}\n              >\n                {selected?.name ?? placeholder}\n              </span>\n              <span className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\n                <ChevronUpDownIcon\n                  className=\"h-5 w-5 text-taling-gray-400\"\n                  aria-hidden=\"true\"\n                />\n              </span>\n            </Listbox.Button>\n            <Transition\n              show={open && enabled}\n              as={Fragment}\n              leave=\"transition ease-in duration-100\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Listbox.Options\n                className={classNames(\n                  \"no-scrollbar absolute z-10 mt-1 overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\",\n                  optionHight,\n                  optionWidth,\n                )}\n              >\n                {list.map((item) => {\n                  const internalSelected = selected?.id === item.id;\n                  const excludeToday = isToday && !item.display;\n                  return (\n                    <Listbox.Option\n                      key={item.id}\n                      className={({ active }) =>\n                        classNames(\n                          excludeToday ? \"hidden\" : \"\",\n                          active || internalSelected\n                            ? \"bg-taling-gray-100\"\n                            : \"text-taling-gray-900\",\n                          \"relative cursor-pointer select-none py-2 pl-3 pr-9\",\n                          optionAlign,\n                        )\n                      }\n                      value={item}\n                    >\n                      {({ selected, active }) => (\n                        <>\n                          <span\n                            className={classNames(\n                              selected || internalSelected\n                                ? \"font-semibold\"\n                                : \"font-normal\",\n                              \"block truncate\",\n                            )}\n                          >\n                            {item.name}\n                          </span>\n\n                          {selected || internalSelected ? (\n                            <span\n                              className={classNames(\n                                active || internalSelected\n                                  ? \"text-taling-black\"\n                                  : \"text-taling-pink\",\n                                \"absolute inset-y-0 right-0 flex items-center pr-4\",\n                              )}\n                            >\n                              <CheckIcon\n                                className=\"h-5 w-5\"\n                                aria-hidden=\"true\"\n                              />\n                            </span>\n                          ) : null}\n                        </>\n                      )}\n                    </Listbox.Option>\n                  );\n                })}\n              </Listbox.Options>\n            </Transition>\n          </div>\n        </>\n      )}\n    </Listbox>\n  );\n}\n","export function classNames(...classes: (string | undefined)[]) {\n  return classes.filter(Boolean).join(\" \");\n}\n"],"mappings":"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","names":["selected"]}